{"version":3,"sources":["Components/Store.js","Services/AuthService.js","Components/Context.js","Components/Navbar.js","Components/Dashboard.js","Components/ChatItem.js","Services/ChatService.js","Components/Message.js","Components/Chats.js","Components/Home.js","Components/Login.js","Components/Register.js","App.js","index.js"],"names":["socket","user","fetch","method","body","JSON","stringify","headers","then","res","status","json","data","isAuthenticated","username","role","success","AuthContext","createContext","children","useState","setUser","setIsAuthenticated","isLoaded","setIsLoaded","useEffect","AuthService","Provider","value","Navbar","props","useContext","handleLogout","console","log","className","to","id","Fragment","type","onClick","context","React","initState","RoomChat1","from","msg","RoomChat2","reducer","state","action","payload","topic","typing","fl","sendChat","emit","Store","checkMessage","check","useReducer","totalChats","dispatch","typingStatus","setTypingStatus","io","on","useStyles","makeStyles","theme","root","padding","spacing","flex","display","alignItems","text","color","topicwindow","width","height","borderRight","chatwindow","chatBox","button","Dashboard","topics","Object","keys","classes","presentTopic","changepresentTopic","textvalue","changeTextValue","changeTypeUser","Paper","elevation","Typography","variant","component","gutterBottom","List","map","ListItem","e","target","innerText","key","ListItemText","primary","chat","i","Chip","label","chip","TextField","onChange","Button","message","msgBody","msgError","catch","err","messageStyle","baseClass","Message","Chats","name","setChat","setChats","setMessage","setUserName","userList","setLists","authContext","ChatService","chats","_id","preventDefault","data1","list","Home","Login","password","onSubmit","history","push","htmlFor","placeholder","Register","timeId","useRef","clearTimeout","setTimeout","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a075000.chunk.js","sourcesContent":["import React from 'react'\nimport io from 'socket.io-client'\nimport {AuthContext} from './Context'\n\nexport const context = React.createContext();\n\nconst initState = {\n    RoomChat1: [\n        {from: 'anubha', msg: 'hello'},\n        {from: 'sona', msg: 'hello'},\n        {from: 'anula', msg: 'hi'}\n    ],\n    RoomChat2: [\n        {from: 'arron', msg: 'hello'},\n        {from: 'arron', msg: 'hello'},\n        {from: 'arron', msg: 'hello'}\n    ]\n}\n\n\n\n\n\n\n//const [userName, setUserName] = useState(\"\");\n\n\n\nfunction reducer(state, action){\n    const {from, msg, topic, typing} = action.payload\n    switch(action.type){\n        case 'RECEIVE_MESSAGE':\n            if(!typing)\n                return {\n                    ...state,\n                    [topic] :[\n                        ...state[topic],\n                        { \n                            from, msg\n                        }\n                    ]\n                }\n         default:\n             return state   \n    }\n}\n\n\n\nlet socket;\nlet fl = 0;\nvar sendChat = (value) =>{\n    console.log('ssend: '+JSON.stringify(value))\n    socket.emit('chat message', value);\n}\n\n/*var sendChat1 = (value) =>{\n    console.log('ssend: '+ JSON.stringify(value))\n    //socket.broadcast.emit('typing', value);\n}*/\nexport default function Store(props) {\n    const user = props.user;\n    const checkMessage = props.check;\n    const [totalChats, dispatch] = React.useReducer(reducer, initState)\n    const [typingStatus, setTypingStatus] = React.useState({from: '', typing: 'false'})\n    if(!socket){\n        socket = io(':3001');\n        console.log('Hi');\n        fl = 1;\n    }\n    \n    if(fl!=0 &&fl<2){\n        socket.on('chat message', function(msg){\n            setTypingStatus({from: msg.from, typing: msg.typing});\n\n            dispatch({type:'RECEIVE_MESSAGE', payload: msg});\n            console.log('JJJ');\n           \n        })\n        fl++;\n       //fl = 2\n    }\n    \n\n    \n    \n    return (\n        <div>\n            {console.log(totalChats)}\n            <context.Provider value = {{totalChats, sendChat, user, typingStatus, checkMessage}}>\n                {props.children}\n            </context.Provider>\n        </div>\n    )\n}\n\n","export default {\n    login: user =>{\n        return fetch('/users/login', {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                'Content-Type':  'application/json',\n                'Accept': 'application/json'\n            }\n        }).then(res => {\n            if(res.status !== 401)\n                return res.json().then(data => data);\n             else\n                return {isAuthenticated: false, user: {username: \"\", role: \"\"}};     \n        });\n        \n    },\n\n    register: user =>{\n        return fetch('/users/register', {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                'Content-Type':  'application/json',\n                'Accept': 'application/json'\n            }\n        }).then(res => res.json())\n          .then(data => data);\n    },\n\n    logout : () =>{\n        return fetch('http://localhost:5000/users/logout')\n                .then(res => {\n                    if(res.status !== 401)\n                        return res.json().then(data => data);\n                    else\n                        return {user:{username: \"\", role:\"\"}, success: false};     \n                });\n    },\n    isAuthenticated: () =>{\n        return fetch('http://localhost:5000/users/authenticated')\n              .then(res => {\n                  if(res.status !== 401)\n                        return res.json().then(data => data);\n                   else\n                        return {isAuthenticated: false, user: {username: \"\", role: \"\"}};     \n              })\n              .then(data => data);\n    }\n}","import React, {createContext, useState, useEffect} from 'react';\nimport AuthService from '../Services/AuthService';\nexport const AuthContext = createContext();\n\nexport default({children}) =>{\n    const [user, setUser] = useState(null);\n    const [isAuthenticated, setIsAuthenticated]  = useState(false);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(()=>{\n        AuthService.isAuthenticated().then(data => {\n            setUser(data.user);\n            setIsAuthenticated(data.isAuthenticated);\n            setIsLoaded(true);\n        });\n    },[]);\n\n    return(\n        <div>\n            {!isLoaded ? <h1> Loading</h1>:\n            <AuthContext.Provider value = {{user, setUser, isAuthenticated, setIsAuthenticated}}>\n                {children}\n            </AuthContext.Provider>\n            }\n        </div>\n    )\n\n}","import React, {useContext} from 'react';\nimport {Link} from 'react-router-dom';\nimport AuthService from '../Services/AuthService';\nimport {AuthContext} from './Context';\n\nconst Navbar = props =>{\n    const {isAuthenticated, user, setIsAuthenticated, setUser} = useContext(AuthContext);\n    \n    const handleLogout = () =>{\n        AuthService.logout().then(data =>{\n           console.log(data);\n           /* if(data.success){\n                setUser(data.user);\n                setIsAuthenticated(false);\n            } */\n            if(isAuthenticated)\n                setIsAuthenticated(false);\n        });\n    }\n    const unauthenticatedBar = () =>{\n        return(\n            <React.Fragment>\n                <Link to = \"/\">\n                    <li className = \"nav-item nav-link\">\n                        Home\n                        \n                    </li>               \n                </Link>\n                <Link to = \"/login\">\n                    <li className = \"nav-item nav-link\">\n                        \n                        Login\n                    </li>               \n                </Link>\n                <Link to = \"/register\">\n                    <li className = \"nav-item nav-link\">\n                        Register\n                        \n                    </li>               \n                </Link>\n            </React.Fragment>\n        )\n    }\n\n    const authenticatedBar = () =>{\n        return(\n            <React.Fragment>\n               {/*<h1>{user.username}</h1>*/}\n                <Link to = \"/\">\n                    <li className = \"nav-item nav-link\">\n                        Home\n                        \n                    </li>               \n                </Link>\n                <Link to = \"/chats\">\n                    <li className = \"nav-item nav-link\">\n                        \n                        Chats\n                    </li>               \n                </Link>\n                {\n                    user.role === \"admin\" ?\n                    <Link to = \"/admin\">\n                        <li className = \"nav-item nav-link\">\n                            \n                            Admin\n                        </li>               \n                    </Link>:null\n                }\n\n                <button type = \"button\" className = \"btn btn-link nav-item nav-link\" onClick = {handleLogout}>\n                    Logout\n                </button>\n              \n            </React.Fragment>\n        )\n    }\n    \n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n           {console.log(user)}\n            <Link to = \"/\">\n              <div className=\"navbar-brand\" > Navbar </div>\n            </Link>\n            <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n                <ul className=\"navbar-nav mr-auto\">\n                \n                    {console.log(isAuthenticated + \"Check\")}\n                    {!isAuthenticated ? unauthenticatedBar() : authenticatedBar()}\n                    \n                \n                </ul>\n               \n  </div>\n</nav>\n    )\n}\n\nexport default Navbar;","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {context} from './Store'\nimport {AuthContext} from './Context';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n     padding: theme.spacing(3,3),\n    },\n      flex: {\n          display: 'flex',\n          alignItems: 'center',\n      },\n      text: {\n        color: \"#0000A0\",\n      },\n      topicwindow:{\n          width: '30%',\n          height: '300px',\n          borderRight: '1px solid grey',\n      },\n      chatwindow:{\n        width: '70%',\n        height: '300px',\n        padding: '20px',\n      },\n      chatBox:{\n        width: '85%',\n      },\n      button:{\n        width: '15%',\n      }\n\n  \n  }));\n\n  export default function Dashboard() {\n    const {totalChats, sendChat, user, typingStatus, checkMessage} = React.useContext(context);\n    //\n    const topics = Object.keys(totalChats);\n    const classes = useStyles();\n    const [presentTopic, changepresentTopic] = useState(topics[0]);\n    \n    const [textvalue, changeTextValue] = useState('');\n   const [currentUser, changeTypeUser] = useState(typingStatus.from);\n    return (\n      <div className={classes.root}>\n       {/*  <Paper elevation={0} /> */} \n        {/*<Paper />*/}\n       \n        <Paper elevation={5}>\n\n        <Typography variant=\"h2\" component=\"h3\" gutterBottom>\n        Chat App\n      </Typography>\n     \n      <Typography variant=\"h4\" component=\"h4\" gutterBottom>\n        {presentTopic}\n      </Typography>\n       \n\n        <div className = {classes.flex}>\n            <div className = {classes.topicwindow}>\n\n                <List>\n                    {topics.map(topic =>(\n                        <ListItem onClick = {e => changepresentTopic(e.target.innerText)} key = {topic} button>\n                        <ListItemText primary={topic} />\n                        </ListItem>\n                    ))\n                    }\n\n                </List>\n            </div>\n            <div className = {classes.chatwindow}>\n                {totalChats[presentTopic].map((chat, i) =>(\n                  <div className = {classes.flex} key = {i}>\n                    <Chip label= {chat.from} className = {classes.chip}/>\n                    \n                    <Typography variant = 'body1' gutterBottom> {chat.msg} </Typography>\n                  </div>\n                ))\n                }\n            </div>\n        </div>\n        <div className = {classes.flex}>\n\n          <TextField\n           id = \"standard-name\"\n           label = \"Send a chat\"\n           \n           className = {classes.chatBox}\n           value = {textvalue}\n         \n           onChange = {e => {changeTextValue(e.target.value)\n            sendChat({from: user, typing: true});\n            {/*changeTypeUser(typingStatus.from);*/}\n          }}\n           />\n\n           \n        <Button variant=\"contained\" color=\"primary\" onClick = {() => {\n          sendChat({from: user, msg: textvalue, topic: presentTopic, typing: false});\n         {/* dispatch({type:'RECEIVE_MESSAGE', payload: {from: user, msg: textvalue, topic: presentTopic}}) */}\n          changeTextValue('');\n          changeTypeUser('');\n          //typingStatus.from = '';\n        \n        }}>\n           Send\n        </Button>\n        \n        </div>\n        <div className = {classes.text}>\n      {typingStatus.typing && (<p>\n      {typingStatus.from} is typing</p>)\n      }\n      </div>\n\n      </Paper>\n      </div>\n    );\n  }","import React from 'react'\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n     padding: theme.spacing(3,2),\n    },\n      flex: {\n          display: 'flex',\n          alignItems: 'center',\n      },\n      topicwindow:{\n          width: '30%',\n          height: '300px',\n          borderRight: '1px solid grey',\n      },\n      chatwindow:{\n        width: '70%',\n        height: '300px',\n        padding: '20px',\n      },\n      chatBox:{\n        width: '85%',\n      },\n      button:{\n        width: '15%',\n      }\n\n  \n  }));\n\nexport default function ChatItem(props) {\n    const classes = useStyles();\n    return (\n        <div className = {classes.flex} >\n            <br></br>\n        <Chip label= {props.user} className = {classes.chip}/>\n            <li>{props.chat.name} </li>\n           \n        </div>\n    )\n}\n","export default{\n    getChats :() =>{\n        return fetch('/users/chats')\n        .then(res =>{\n            if(res.status !== 401){\n                return res.json().then(data => data);\n            }\n            else{\n                return {message:{msgBody: \"UnAuthorized\"}, msgError: true};\n            }\n        }).catch((err)=>{\n            console.log(err);\n        });\n    },\n\n    postChat : chat =>{\n        return fetch('/users/chat',{\n            method : \"post\",\n            body: JSON.stringify(chat),\n            headers: {\n                'Content-Type':  'application/json',\n                'Accept': 'application/json'\n            }\n        }).then(res => {\n            if(res.status !== 401)\n                return res.json().then(data => data);\n             else\n                return {message:{msgBody: \"UnAuthorized\"}, msgError: true};   \n        }).catch((err)=>{\n            console.log(err);\n        });\n    }\n}","import React from 'react'\n\nconst messageStyle = (props) =>{\n    let baseClass = \"alert \";\n    if(props.message.msgError)\n        baseClass = baseClass + \"alert-danger\";\n     else\n        baseClass = baseClass + \"alert-primary\";  \n        \n    return baseClass + \" text-center\";    \n}\n\nconst Message = (props) => {\n    return (\n        <div className = {messageStyle(props)} role = \"alert\">\n            {props.message.msgBody}\n            \n        </div>\n    )\n}\nexport default Message;","import React, {useState, useContext, useEffect} from 'react';\nimport ChatItem from './ChatItem';\nimport ChatService from '../Services/ChatService';\nimport Message from './Message'\nimport {AuthContext} from './Context';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n     padding: theme.spacing(3,2),\n    },\n      flex: {\n          display: 'flex',\n          alignItems: 'center',\n      },\n      topicwindow:{\n          width: '30%',\n          height: '300px',\n          borderRight: '1px solid grey',\n      },\n      chatwindow:{\n        width: '70%',\n        height: '300px',\n        padding: '20px',\n      },\n      chatBox:{\n        width: '85%',\n      },\n      button:{\n        width: '15%',\n      }\n\n  \n  }));\n\nconst Chats = props =>{\n    const [chat, setChat] = useState({name: \"\"});\n    const [chats, setChats] = useState([]);\n    const [message, setMessage] = useState(null);\n    const [userName, setUserName] = useState(\"\");\n    const [userList, setLists] = useState([]);\n    const authContext = useContext(AuthContext);\n    const [presentTopic, changepresentTopic] = useState(userList[0]);\n\n    const classes = useStyles();\n    useEffect(()=>{\n        ChatService.getChats().then(data =>{\n            setChats(data.chats);\n        });\n    }, []);\n\n    const onChange = (e) =>{\n        //e.preventDefault();\n        setChat({name: e.target.value});\n        //console.log(user);\n    }\n    const resetForm = () =>{\n        setChat({name: \"\"});\n      \n    }\n    const onSubmit = (e) =>{\n        e.preventDefault();\n        ChatService.postChat(chat).then(data =>{\n            console.log(data);\n           const {message} = data;\n           resetForm();\n           if(!message.msgError){\n               ChatService.getChats().then(data1 =>{\n                  // console.log(\"In chats: \")\n                   console.log(data1);\n                   setUserName(data1.user);\n                   setChats(data1.chats);\n                   setLists(data1.list);\n                   setMessage(message);\n               });\n           }\n           else if(message.msgBody === \"UnAuthorized\"){\n               setMessage(message);\n               authContext.setUser({username: \"\", role: \"\"});\n               authContext.setIsAuthenticated(false);\n\n           }\n           else{\n               setMessage(message);\n           }\n        });\n    }\n\n  \n    return(\n        <div className={classes.root}>\n            \n\n              <Typography variant=\"h2\" component=\"h3\" gutterBottom>\n                List of all registered user\n            </Typography>\n\n            <Typography variant=\"h4\" component=\"h4\">\n                {presentTopic}\n            </Typography>\n          \n            <List>\n                    {userList.map(topic =>(\n                        <ListItem onClick = {e => changepresentTopic(e.target.innerText)} key = {topic._id} button>\n                        <ListItemText primary={topic.username} />\n                        </ListItem>\n                    ))\n                    }\n\n                </List>\n       \n        <Button variant=\"contained\" color=\"primary\" onClick = {onSubmit} >\n           Want to see list of all registered user\n        </Button>\n     \n       \n        {message && <Message message = {message}/>}\n        </div>\n    )\n}\n\nexport default Chats;","\nimport React, {useContext} from 'react'\nimport Store from './Store'\nimport Dashboard from './Dashboard'\nimport {AuthContext} from './Context';\nimport Chats from './Chats';\n\nexport default function Home() {\n  const {user, setUser, isAuthenticated, setIsAuthenticated} = React.useContext(AuthContext);\n  return (\n    <div>\n      {isAuthenticated ?\n      (<Store user = {user.username} check = {isAuthenticated}>\n        {console.log(\"Hello\")}\n        {console.log(user)}\n        <Chats/>\n        <Dashboard/>\n      </Store>) : <h1>Please First Login to Chat</h1>\n      \n}\n    </div>\n  )\n}\n","import React, {useState, useContext} from 'react';\nimport AuthService from '../Services/AuthService';\nimport Message from './Message';\nimport {AuthContext} from './Context';\n\n\nconst Login = (props) =>{\n    const [user, setUser] = useState({username: \"\", password: \"\"});\n    const [message, setMessage] = useState(null);\n    const authContext = useContext(AuthContext);\n\n    const onChange = (e) =>{\n       // e.preventDefault();\n        setUser({...user, [e.target.name]: e.target.value});\n        //console.log(user);\n    }\n    const onSubmit = (e) =>{\n        e.preventDefault();\n       AuthService.login(user).then(data =>{\n           \n           const {isAuthenticated, user, message} = data;\n           console.log(user.username);\n           if(isAuthenticated){\n               authContext.setUser(user);\n               authContext.setIsAuthenticated(isAuthenticated);\n               console.log(props);\n               props.history.push('/chats');\n           }\n           else{\n               setMessage(message);\n           }\n       })\n    }\n    return(\n        <div>\n            <form onSubmit = {onSubmit}>\n                <h2>Please Sign-in</h2>\n                <label htmlFor = \"username\" className = \"sr-only\"> Username: </label>\n                <input type = \"text\" name = \"username\" onChange = {onChange} className= \"form-control\" placeholder = \"Enter userName\"/>\n\n                <label htmlFor = \"password\" className = \"sr-only\"> Password: </label>\n                <input type = \"password\" name = \"password\" onChange = {onChange} className= \"form-control\" placeholder = \"Enter Password\"/>\n\n                <button className = \"btn btn-lg btn-primary btn-block\" type = \"submit\">Login</button>\n            </form>\n            {message ? <Message message = {message}/> : null}\n        </div>\n    )\n}\n\nexport default Login;","import React, {useState, useRef, useEffect} from 'react';\nimport AuthService from '../Services/AuthService';\nimport Message from './Message';\n\nconst Register = (props) =>{\n    const [user, setUser] = useState({username: \"\", password: \"\", role: \"\"});\n    const [message, setMessage] = useState(null);\n    let timeId = useRef(null);\n\n    useEffect(()=>{\n        return () => clearTimeout(timeId);\n    }, []);\n\n    const onChange = (e) =>{\n        //e.preventDefault();\n        setUser({...user, [e.target.name]: e.target.value});\n        //console.log(user);\n    }\n    const resetForm = () =>{\n        setUser({username: \"\", password: \"\", role: \"\"});\n    }\n    const onSubmit = (e) =>{\n        e.preventDefault();\n       AuthService.register(user).then(data =>{\n           console.log(data);\n           const {message} = data;\n           setMessage(message);\n           resetForm();\n           if(!message.msgError){\n               timeId = setTimeout(()=>{\n                   props.history.push('/login');\n               },2000)\n           }\n         \n       })\n    }\n    return(\n        <div>\n            <form onSubmit = {onSubmit}>\n                <h2>Please Signup</h2>\n                <label htmlFor = \"username\" className = \"sr-only\"> Username: </label>\n                <input type = \"text\" name = \"username\" value = {user.username} onChange = {onChange} className= \"form-control\" placeholder = \"Enter userName\"/>\n\n                <label htmlFor = \"password\" className = \"sr-only\"> Password: </label>\n                <input type = \"password\" name = \"password\" value = {user.password} onChange = {onChange} className= \"form-control\" placeholder = \"Enter Password\"/>\n                <input type = \"text\" name = \"role\" value = {user.role} onChange = {onChange} className= \"form-control\" placeholder = \"Enter Role\"/>\n                <button className = \"btn btn-lg btn-primary btn-block\" type = \"submit\">Register</button>\n            </form>\n            {message ? <Message message = {message}/> : null}\n        </div>\n    )\n}\n\nexport default Register;","import React from 'react';\nimport Navbar from './Components/Navbar';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport Home from './Components/Home'\nimport Login from './Components/Login';\nimport Register from './Components/Register';\nimport Chats from './Components/Chats';\n\nfunction App() {\n \n  return (\n    <BrowserRouter>\n    <Navbar/>\n    <Route exact path = \"/\" component = {Home}/>\n    <Route path = \"/login\" component = {Login}/>\n    <Route path = \"/register\" component = {Register}/>\n    <Route path = \"/chats\" component = {Home}/>\n    \n    </BrowserRouter>\n   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport AuthProvider from './Components/Context'\n\n\nReactDOM.render(\n  <AuthProvider>\n    <App />\n    </AuthProvider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}